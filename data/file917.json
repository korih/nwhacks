{
    "author": "Anonymous Poet",
    "position": "student",
    "course": "CPSC 110 2021WT2",
    "post_num": 917,
    "link": "https://piazza.com/class/ky0ewiregcz421/post/917",
    "title": "PS11 Q4",
    "question": "why is this check-expect in question 4 valid?\nshouldn't there only be one path from TF to TA?\n\n(define TREASURE-MAP\n  (list (make-treasure \"E\" 32 3 \"buried\"  (list (make-route 3 \"A\")))\n        (make-treasure \"F\" 10 2 \"locked\"  (list (make-route 7 \"C\")))\n        (make-treasure \"B\" 6 5 \"locked\"   (list (make-route 9 \"E\")\n                                                (make-route 15 \"F\")))\n        (make-treasure \"J\" 1 1 \"sunken\"   (list (make-route 6 \"I\")))\n        (make-treasure \"H\" 17 2 \"sunken\"  (list (make-route 15 \"J\")\n                                                (make-route 4 \"I\")))\n        (make-treasure \"G\" 52 3 \"buried\"  (list (make-route 2 \"D\")))\n        (make-treasure \"I\" 100 5 \"locked\" empty)\n        (make-treasure \"D\" 21 1 \"sunken\"  (list (make-route 8 \"G\")\n                                                (make-route 13 \"H\")\n                                                (make-route 9 \"I\")\n                                                (make-route 11 \"A\")))\n        (make-treasure \"C\" 41 4 \"buried\"  (list (make-route 6 \"G\")))\n        (make-treasure \"A\" 7 1 \"locked\"   (list (make-route 12 \"B\")\n                                                (make-route 7 \"C\")\n                                                (make-route 27 \"D\")))))\n\n\n;; Complete the design of a function that consumes two treasures and counts\n;; the number of routes reachable starting at from that lead to to.\n;;\n;; Note: This is counting the number of routes found in treasure boxes where TF\n;; is the destination, NOT the total number of paths between the two treasure\n;; boxes. It is asking how many routes have TF as their destination (how many\n;; arrows are pointing to TF).\n;;\n;; Examples:\n;;\n;; (num-lead-to TA TI) produces 3. This is because there are three routes that\n;; are reachable from TA that lead to TI. These routes are the route leading\n;; from TH to TI, the route leading from TJ to TI, and the route leading from\n;; TD to TI.\n;;\n;; (num-lead-to TI TA) produces 0. Even though two routes lead to TA (the\n;; route from TD to TA and the route from TE to TA), neither route can be\n;; reached from TI so the function produces 0.\n;;\n;; Note that you can use the built-in function equal? to compare if two\n;; treasures are equal. For example:\n;;   - (equal? TE TF) produces false\n;;   - (equal? TB TB) produces true\n\n(check-expect (num-lead-to TF TA) 2)",
    "student_answer": "@6\nFrom TF, I can get to TE and TD - both have a path that leads to TA.\nEdit: This means that journeys that involve passing through TA and leading right back to TA are also considered valid and counted.",
    "instructor_answer": "Not Found"
}