{
    "author": "Emily Fuchs (she/they)",
    "position": "student",
    "course": "CPSC 110 2021WT2",
    "post_num": 477,
    "link": "https://piazza.com/class/ky0ewiregcz421/post/477",
    "title": "Midterm 1 Grades and Information",
    "question": "SOME OF THE INFORMATION IN THIS POST IS VERY TIMELY. ALL OF IT IS VERY IMPORTANT. WE KNOW IT IS LONG, BUT PLEASE READ IT ALL NOW.\nPlease respect the time of everyone on Piazza and read this entire message carefully before posting anything about the midterm. Questions that could be answered by reading this post will not be answered.\nThere are several sections below including:\nStatistics\nFeedback on individual questions\nWhat getting a low grade means\nNotes about the rubric\nViewing your exam in Gradescope\nSubmitting regrade requests\nStatistics\nThe individual problem weights and stats are as follows:\nProblem 1 2 3 4 4 Style Total\nWeight 20 20 20 30 10 100\nMedian 97 100 80 96 60 -\nMean 78 94 76 73 65 78\n  Feedback on Individual Problems\nProblem 1\nThis problem was entirely autograded.  Consult your autograding report on Gradescope for your % score on this problem.\n  This problem tested the important skill of systematically reading through a program to identify errors in the code.  In this particular case there was an error in the implementation of a function and a deficiency in the corresponding tests.  The fact that the tests passed while there was an error in the implementation of a function, indicates that the tests were not thorough.  \n  The question was graded on your ability to:\nIdentify and fix the error in handle-mouse\nRecognize that the arguments passed to handle-mouse in the check-expect that was provided were poorly chosen and fix them\nRecognize that one check-expect is not sufficient and design another that varied the arguments passed to handle-mouse\nIf you did not do well on this question, it\u2019s recommended that you review modules 1b (How to Design Functions) and 3a (How to Design Worlds). \nProblem 2\nThis problem was entirely autograded.  Consult your autograding report on Gradescope for your % score on this problem.\n  This question tested your ability to systematically design a function using the HtDF recipe.  While working on such a question, you should refer to the recipe checklist to ensure that you have followed all the steps.  Doing so will help you make progress towards a correct design.  The autograder checked that all the steps in the HtDF recipe had been followed.  Of particular note, it checked that:\n  you designed tests that covered the cases x = 0, x > 0, y = 0, y > 0, x not equal to y\nthat at least one of your tests will fail if run against a function whose implementation is not correct\n  If you did not do well on this question, please review Module 1b (How to Design Functions) and work through some additional problems from the Problem Bank.\nProblem 3\nThis problem was entirely autograded.  Consult your autograding report on Gradescope for your % score on this problem.\n  This question tested your ability to systematically apply the data driven template rules to design a template from a structure definition and type comments.  While working on such a question, you should refer to the recipe checklist to ensure that you have followed all the steps.  The recipe checklist also provides reminders of the cond-questions to be used in each case.  In this particular question, it was important to be able to:\n  distinguish between atomic-distinct and atomic-non-distinct\nrecognize that you were working with a mixed-type itemization and that guards were needed in the cond questions\nrecognize the self-reference in the types comment \n(make-who Bazzle String) references Bazzle\nrecognize that the self-reference in the types comment results in a natural recursion in the template\n  If you did not do well in this question, please review Modules 2 (How to Design Data), 3b (Compound Data) and 4a (Self-Reference), and work through some additional practice problems from the Problem Bank. \n  Problem 4\nThis question was partially auto-graded and partially hand-graded.  If your code could not be graded due to a syntax error, it was examined to determine the nature of the problem.  If you were missing a tag (something that you would not have been able to detect by checking syntax and running your program) a 20% penalty was applied.  If your code did not pass check-syntax a 40% penalty was applied. In each of these cases, your program was then hand-graded using the same rubric as applied by the autograder and the autograder report was manually adjusted.  In all cases, you can therefore consult your autograding report on Gradescope for your % score on this problem.\n  This question tested your ability to \n  apply the HtDF recipe \ndesign a function that consumes arbitrary sized data\nrecognize an application of the reference rule (note that the template for ListOfProject provided in the question includes a call to fn-for-project)\nIn addition to correctness, this question was hand-graded for style.  In particular, a penalty was applied for errors in the purpose statement (must be no more than one line long, must mention that funds are added, must mention that there is an upper limit on the amount funded).  A penalty was also applied for each instance of:\n  function name convention (applies to helper only)\nparameter name convention\n;; comment - intended to be permanent vs ; comment - for temporary things such as the stub\ninconsistent indentation (use cmd/ctrl+I to have Dr.Racket fix indentation problems)\nWhat Getting a Low Grade Means\nIt is important to keep in mind that the course is about to pick up in both speed and complexity. Please take the feedback you are receiving from this exam as useful information going into the rest of the course.\n  70 - 80 Spend time reviewing the exam and working through problems to correct the misconceptions you demonstrated.\n  60 - 70 We encourage you to attend TA or instructor office hours this week. At those office hours ask the course staff to review your exam and your work to date. They will be able to help you develop a plan for getting caught up. You have to work at least 2 hrs extra each day this week to get caught up. \n  For grades below 60, a great deal of work will be required during the next week to succeed in the remainder of the course. Please do not wait to get help, instead reach out to an instructor ASAP so we can help you plan. You can also use Piazza to ask questions.\n  See below about regrade requests - DO NOT contact us via email or Piazza about regrade requests.\n  Viewing Your Exam in Gradescope\nThe graded exams are now available in Gradescope. Please carefully read all of the steps below on how to access Gradescope using your CS ID, as the process is a little confusing.\n  The email address associated with your Gradescope account is your CSID@ugrad.cs.ubc.ca address. To find your CS ID, please login to https://www.cs.ubc.ca/getacct/ and look below your forwarding email address. You will see \"Alias: CSID@ugrad.cs.ubc.ca.\" Remember that your CS ID is a 4-5 digit ID of alternating letters and numbers. So, if your CS ID is r2d2, your email address is r2d2@ugrad.cs.ubc.ca. Make note of this email address.\nGo to http://www.gradescope.ca (note this is gradescope.CA not gradescope.COM)\nClick \"Log In\" and then \"Forgot Your Password?\"\nPlease enter the email address noted in step 1. \nThis will send an email to whatever account you have linked to your CS email forwarding. That email will include information on how to reset your password, and then you can login to Gradescope.\nIf you do not receive that email, make sure your email forwarding settings are set up properly. You can update your email forwarding settings here: https://www.cs.ubc.ca/getacct/. If you do not see your exam in Gradescope, please email cpsc110-admin@cs.ubc.ca.\n  In Gradescope you will see your exam broken up into 5 problems. Problems 1-4, and then the style grading component of problem 4. Each grade shown is a PERCENTAGE grade for that segment of the exam. You can combine those percentage grades with the per problem weights shown above to get your total exam grade.\n  Submitting Regrade Requests\nA regrade request is only appropriate if your exam was mis-graded according to the rubric. We will make another Piazza post with more details about submitting a regrade request and you will be required to submit your request through Gradescope. DO NOT contact us via email or Piazza about regrade requests.",
    "student_answer": "Not Found",
    "instructor_answer": "Not Found"
}