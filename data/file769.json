{
    "author": "Anonymous Calc",
    "position": "student",
    "course": "CPSC 110 2021WT2",
    "post_num": 769,
    "link": "https://piazza.com/class/ky0ewiregcz421/post/769",
    "title": "Genrec - Simple Cantor",
    "question": "(define l&r (cantor w/3))\n(above top\n       gap\n       (beside l&r spc l&r))\nCould someone please explain what causes this function to undergo recursion? I understand that the recursive call is (cantor w/3), but if we had to repeat (cantor w/3) many times how would the function \"know\" to repeat this process after the first instance of (cantor w/3)? \nAlso, wouldn't top be produced with each recursive call? We want there to be a gap between each horizontal block, so it makes sense for that to be there. However, for top, we only want one at the very top of the image so why is that being called in the recursion? \nThanks.",
    "student_answer": "Next time, could you please include the full problem and set of definitions so we would know exactly how top and gap are defined? \nIn this full definition for this problem,  we can see that the definition of l&r, as you have, is (define l&r (cantor w/3)), which is definitely a recursive call. Cantor here is a self-reference and the first locally defined function, w/3 is the reducer which we see called in both the l&r and spc definitions.  So every time cantor carries out the beside expression, the whole function is called again. After the function creates the top and first gap, it will recurse through the (beside l&r spc l&r) function, creating right and left branches until the first case of the cond is met, and CUTOFF is reached. \n(@htdf cantor)\n(@signature Number -> Image)\n;; Produce cantor set image of given width\n;; CONSTRAINT: w >= 0\n\n(@template genrec)\n(define (cantor w)\n  ;; base case:  w <= CUTOFF, (note CUTOFF is > 0)\n  ;; reduction:  w / 3\n  ;; argument:   repeated division by 3 approaches 0, so will get below CUTOFF \n  \n  (cond [(<= w CUTOFF) (rectangle w BAR-HEIGHT \"solid\" BAR-COLOR)]\n        [else\n         (local [(define w/3 (/ w 3))\n                 (define top (rectangle w BAR-HEIGHT \"solid\" BAR-COLOR))\n                 (define gap (rectangle w GAP-HEIGHT \"solid\" SPACER-COLOR))\n                 (define l&r (cantor w/3))\n                 (define spc (rectangle w/3 BAR-HEIGHT \"solid\" SPACER-COLOR))]\n           (above top\n                  gap\n                  (beside l&r spc l&r)))]))",
    "instructor_answer": "Not Found"
}