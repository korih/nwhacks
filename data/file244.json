{
    "author": "Anonymous Calc",
    "position": "student",
    "course": "CPSC 110 2021WT2",
    "post_num": 244,
    "link": "https://piazza.com/class/ky0ewiregcz421/post/244",
    "title": "need help with the grade-staning problem from lecture",
    "question": "Hi \n(define (fn-for-gradestanding G)\n  (cond [(number? G) (... G)]\n        [(string=? G \"H\") (...)]\n        [(string=? G \"P\") (...)]\n        [(string=? G \"F\") (...)]\n        [else (...)])\ni understand the first line with condition will be this format (cond [(number? G) (... G)]\nhowever, where can i put answer (true) for the question?\nshould i use \"and\" instead ? \narent (number? G) (>= G 90) both questions for the expression?\n(@template GradeStanding)\n(define (excellent? G)\n  (cond [(number? G) (>= G 90) true]\n        [(string=? G \"H\") false]\n        [(string=? G \"P\") false]\n        [(string=? G \"F\") false]\n        [else false]))\nthank you !",
    "student_answer": "(define (excellent? G)\n  (cond [(number? G) (>= G 90) true]\n        [(string=? G \"H\") false]\n        [(string=? G \"P\") false]\n        [(string=? G \"F\") false]\n        [else false]))\n\n\n- In a cond. expression, there are two arguments, i.e., a Q and A (question and answer)\n- (number? G) is a question and for TRUE condition, (>= G 90) is an ANSWER, which is boolean expression (T or F). Therefore, we need not to explicitly mention TRUE in the first cond. expression, as (>= G 90) would produce T/F.\nPS: (>= G 90) is a question with answer in it, or vice versa.\n\n- Second, putting \"and\" and \"true\" together in the first cond. expression would start fire falling from the sky (in simple words the code will blow up) because of the following reasons.\n\n- for (and (number? G) (>= G 90)) true) expression, if the given G value is >=90, then it would produce T. However, replacing the G value with <90 would lead the first cond. expression to produce F. Thereafter, the value of G (<90), would pass to the second cond. expression, i.e., ((string=? G \"H\") false). G value <90 would confuse (string=? G \"H\"), as this expression is expecting a string to match with \"H\". Under this confusion, (string=? G \"H\") will go mad, and bring apocalypse.\n\n- One more thing, if the (string=? XXXXXX) expression is the first expression, followed by the (number? XXXXXX); then, only the (string=? XXXXXX) expression has to be guarded (a question before a question) with (and (string? XXXXXX), otherwise a \"number input\" will bring the apocalypse (code blows up!). (and (string? XXXXXX) (guard) will ensures that only the \"string\" input passes to the second question (string=? G \"H\") of first expression, and the numbers passes to the second cond. expression without blowing up the code.\n\nHope this explanation will be helpful.\nHave a great time coding!\nCheers!",
    "instructor_answer": "Not Found"
}