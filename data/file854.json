{
    "author": "Anonymous Comp",
    "position": "student",
    "course": "CPSC 110 2021WT2",
    "post_num": 854,
    "link": "https://piazza.com/class/ky0ewiregcz421/post/854",
    "title": "next-board check-expect from sudoku making the list come true part 1 pt 2 video",
    "question": "Hi.. this is from module 9, making the list come true part 1 pt 2 video. \nI'm having trouble understand how this check-expect was formed. I get that this function is creating the next list of possible boards, with values 1-9  in the next spot. \nI understand that BD1 Is an empty board with all spaces as false, so I was thinking that the next possible board would just be like.. \n(list (cons 1 (rest BD1))\n       (cons 2 (rest BD1))\n       (cons 3 (rest BD1)) all the way to 9... ??? Meaning that we are filling spot 0,0 with values 1-9? \n        ;; Board -> (listof Board)\n;; finds first empty square, fills it with Natural [1,9], keeps only valid boards.\n;; !!!\n\n(check-expect (next-board (cons 1 (rest BD1)))\n              (list (cons 1 (cons 2 (rest (rest BD1)))))\n              (list (cons 1 (cons 3 (rest (rest BD1)))))\n              (list (cons 1 (cons 4 (rest (rest BD1)))))\n              (list (cons 1 (cons 5 (rest (rest BD1)))))\n              (list (cons 1 (cons 6 (rest (rest BD1)))))\n              (list (cons 1 (cons 7 (rest (rest BD1)))))\n              (list (cons 1 (cons 8 (rest (rest BD1)))))\n              (list (cons 1 (cons 9 (rest (rest BD1))))))\n\n(define (next-boards bd) empty)\n             \nAny help would be greatly appreciated!! Search is kind of killing me @_@",
    "student_answer": "The check-expect is called with (cons 1 (rest BD1)), not just BD1. This would be an empty board (rest BD1) with the first square filled with 1 (cons 1). The expression then creates a list of boards; each board in this list has the second square filled with [1, 9]. So, the first board in the list is \n(list (cons 1 (cons 1 (rest (rest BD1)))))  \nthe second is\n(list (cons 1 (cons 2 (rest (rest BD1)))))\nand so forth.\nThe expression then filters our all invalid boards. As the first square is in the same Box unit and Row unit as the second square, the second square cannot have a 1 in it. This is why\n(list (cons 1 (cons 1 (rest (rest BD1))))) \nis missing from the list of next possible boards in the check-expect.\nOnce the invalid boards have been filtered out, the expression returns a list of lists; each list in that list (I know, it can be a bit confusing!) is in itself a board. \nFirst student answer:\nNot 0,0 but 0 only as the board is a list of false|Natural [1, 9]- it's a single list.",
    "instructor_answer": "Not Found"
}