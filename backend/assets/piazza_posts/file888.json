{
    "author": "Rajan Sapkota",
    "position": "student",
    "course": "CPSC 110 2021WT2",
    "post_num": 888,
    "link": "https://piazza.com/class/ky0ewiregcz421/post/888",
    "title": "Problem Set 10 Question 3",
    "question": "I've looked at the racket documentation for the primitive string-ci<=? but I am still confused at what it exactly does. Or is this one of those questions where you don't exactly need to understand what the primitive does to complete the function?",
    "student_answer": "It produces true if the strings are in alphabetical order essentially (this is what lexicographically increasing means). The ci part refers to \"case-insensitive\", meaning that it evaluates the strings as lowercase only. Because of the = part, if you have two strings that start with the same letter they can still be considered in alphabetical order as long as the strings around them are in the correct order (same as <= for numbers). Some examples: \n(string-ci<=? apple bowl cup) -> true \n(string-ci<=? apple BOWL Cup) -> true \n(string-ci<=? apple apricot bowl cup) -> true \n(string-ci<=? bowl apple cup) -> false\n(string-ci<=? bowl Apple CUP) -> false  \n(string-ci<=? bowl apple apricot cup) -> false\nHope this helps! ",
    "instructor_answer": "Not Found"
}