{
    "author": "Thiago Amin",
    "position": "student",
    "course": "CPSC 110 2021WT2",
    "post_num": 229,
    "link": "https://piazza.com/class/ky0ewiregcz421/post/229",
    "title": "edX HtDD P3 Error (rocket-starter.rkt)",
    "question": "This is the problem/my answer:\n(@problem 1)\n;;\n;; You are designing a program to track a rocket's journey as it descends \n;; 100 kilometers to Earth. You are only interested in the descent from \n;; 100 kilometers to touchdown. Once the rocket has landed it is done.\n;;\n;; Design a data definition to represent the rocket's remaining descent. \n;; Call it RocketDescent.  Use a mixed data itemization to clearly\n;; distinguish the case of when has shutdown and the journey is over. \n\n(@htdd RocketDescent)\n;; RocketDescent is one of\n;; - Number (0, 100]\n;; - false\n;; interp. false if rocket is 0km for eath, otherwise number of kilometers\n;;         left to Earth, restricted to (0, 100]\n(define rd1 100)\n(define rd2 50)\n(define rd3 0)\n(define rd4 false)\n\n(@dd-template-rules one-of\n                   atomic-non-distinct\n                   atomic-distinct)\n(define (fn-for-rocket-descent rd)\n  (cond [(number? rd) (... rd)]\n        [(string=? rd \"false\") (...)]))\n\n;; =================\n;; Functions:\n\n(@problem 2)\n;;\n;; Design a function that will output the rocket's remaining descent distance \n;; in a short string that can be broadcast on Twitter. \n;; When the descent is over, the message should be \"The rocket has landed!\".\n;; Call your function rocket-descent-to-msg.\n\n(@htdf rocket-descent-to-msg)\n(@signature RocketDescent -> String)\n;; produce string with remaining distance if (0, 100)\n;;     if \"false\" produce string \"The rocket has landed!\"\n(check-expect (rocket-descent-to-msg 100) \"Altitude is 100km\")\n(check-expect (rocket-descent-to-msg 50) \"Altitude is 50km\")\n(check-expect (rocket-descent-to-msg 0.5) \"Altitude is 0.5km\")\n(check-expect (rocket-descent-to-msg \"false\") \"The rocket has landed!\")\n\n;(define (rocket-descent-to-msg rd) \"\") ;stub\n\n(@template RocketDescent)\n\n(define (rocket-descent-to-msg rd)\n  (cond [(number? rd) (string-append \"Altitude is \" (number->string rd) \"km\")]\n        [(string=? rd \"false\") \"The rocket has landed!\"]))\nThis is the error:\nRan 4 tests.\n1 of the 4 tests failed.\n\nCheck failures:\n        Actual value \"Altitude is 1/2km\" differs from \"Altitude is 0.5km\", the expected value.\nin rocket-starter.rkt, line 53, column 0\nWhat should I change to get 0.5 instead of 1/2?",
    "student_answer": "You should change the following line of code instead:\n(check-expect (rocket-descent-to-msg 0.5) \"Altitude is 0.5km\")\nThe number->string expression when evaluating a decimal, produces the decimal as a fraction within a string.\nex. (number->string 0.25)\nproduces \"1/4\"",
    "instructor_answer": "Not Found"
}