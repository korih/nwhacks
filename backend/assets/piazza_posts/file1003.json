{
    "author": "Angad Dhillon",
    "position": "student",
    "course": "CPSC 110 2021WT2",
    "post_num": 1003,
    "link": "https://piazza.com/class/ky0ewiregcz421/post/1003",
    "title": "2019 w2 final problem 4",
    "question": "This code is tail recursive right? \n(@htdf long-seq-list) ;START YOUR SOLUTION BELOW HERE\n(@signature (listof Natural) -> (listof Natural))\n;; produce longest sequence of consecutive numbers ignoring duplicates\n(check-expect (long-seq-list (list 1 1 1 2 2 5 5 5 7 8 8 9 15 19)) (list 7 8 9))\n(check-expect (long-seq-list (list 1 1 1 2 2 5 5 5 7 8 9 15 19)) (list 7 8 9))\n(check-expect (long-seq-list (list 1 2 3 4 5 6 7 8 9)) (list 1 2 3 4 5 6 7 8 9))\n(check-expect (long-seq-list (list 1)) (list 1))\n(check-expect (long-seq-list (list 4 4 4 4 4 4)) (list 4))\n(check-expect (long-seq-list (list 3 5 5 5 5 7 7 9 10 11 11)) (list 9 10 11))\n(check-expect (long-seq-list (list 1))\n              (list 1))  \n\n(@template (listof X) accumulator)\n\n(define (long-seq-list lon0)\n  ;; prev is Natural; previous number in list\n  ;; rsf is (listof Natural); list of consecutive numbers\n  ;; greatest is (listof Natural); longest list of consecutive numbers\n  ;;\n  (local [(define (fn-for-lon lon prev rsf greatest) \n            (cond [(empty? lon) (reverse greatest)]\n                  [else   \n                   (cond [(= (add1 prev) (first lon))\n                          (fn-for-lon (rest lon) (first lon)\n                                      (cons (first lon) rsf)\n                                      (if (> (length (cons (first lon) rsf))\n                                              (length greatest))\n                                          (cons (first lon) rsf)\n                                          greatest))]\n                         [(= prev (first lon))\n                          (fn-for-lon (rest lon) (first lon) rsf greatest)]\n                         [else\n                          (fn-for-lon (rest lon) (first lon)\n                                      (cons (first lon) empty)\n                                      (if (> (length (cons (first lon) empty))\n                                              (length greatest))\n                                          (cons (first lon) rsf)\n                                          greatest))])]))]    \n\n    (fn-for-lon lon0 0 empty empty)))",
    "student_answer": "yea, I would think so.",
    "instructor_answer": "Not Found"
}