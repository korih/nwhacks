{
    "author": "Anonymous Atom",
    "position": "student",
    "course": "CPSC 110 2021WT2",
    "post_num": 428,
    "link": "https://piazza.com/class/ky0ewiregcz421/post/428",
    "title": "Practice Midterm 2021",
    "question": "Hello, I have been working on this problem for a while now but I can't seem to figure out where I am going wrong.  this is question 5 of the 2021 practice midterm. I keep getting told all of my tests except the first one are wrong. Would someone be able to tell me where I'm going wrong?\n(@htdf tock-cat)\n(@signature Cat -> Cat)\n;; happy cat doesn't move; unhappy moves by vel and turns around at wall\n(check-expect (tock-cat (make-cat 300 0 true))\n              (make-cat 300 0 true))\n(check-expect (tock-cat (make-cat 300 -5 false))\n              (make-cat 295 -5 false))\n(check-expect (tock-cat (make-cat (+ LEFT 1) -1 false))\n              (make-cat (+ LEFT 1) 1 false))\n(check-expect (tock-cat (make-cat (+ LEFT 2) -3 false))\n              (make-cat (+ LEFT 1) 3 false))\n(check-expect (tock-cat (make-cat (- RIGHT 1) 1 false))\n              (make-cat (- RIGHT 1) -1 false))\n(check-expect (tock-cat (make-cat (- RIGHT 2) 3 false))\n              (make-cat (- RIGHT 1) -3 false))\n               \n;(define (tock-cat c) c) ;stub\n\n\n\n\n(@template Cat)\n\n\n\n\n(define (tock-cat c)\n  (cond \n        [(and (false? (cat-unhappy-vel c))\n              (>= (+ (cat-x c) (cat-unhappy-vel c)) RIGHT))\n         (make-cat (- RIGHT 1) (- (cat-unhappy-vel c)) (cat-happy? c))]\n        [(and (false? (cat-unhappy-vel c))\n              (<= (+ (cat-x c) (cat-unhappy-vel c)) LEFT))\n         (make-cat (+ LEFT 1) (- (cat-unhappy-vel c)) (cat-happy? c))]\n        [(and (false? (cat-unhappy-vel c))\n              (< (+ (cat-x c) (cat-unhappy-vel c)) RIGHT)\n              (> (+ (cat-x c) (cat-unhappy-vel c)) LEFT))\n         (make-cat (+ (cat-x c) (cat-unhappy-vel c))\n                   (cat-unhappy-vel c) (cat-happy? c))] \n        [else\n         (make-cat (cat-x c) 0 true)]))  ",
    "student_answer": "The LEFT and RIGHT constants are defined in a way such that the width of the cat has been accounted for and the cat will not go off the screen. \nIf the cat is going to hit the wall, why would you place it (- RIGHT 1) or (+ LEFT 1) away from the walls if the cat's width has already been accounted for? You should produce the cat with its x-position directly at RIGHT or LEFT, so besides the errors in your test, some of your cond/answer pairs are also incorrect.",
    "instructor_answer": "Not Found"
}